version: 2.1

commands:
  set_up_environment:
    steps:
      - run: git submodule update --init
      - run: curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.10.1
  install_workspace_dependencies:
    description: "Run `yarn install` from the workspace root to install all of the workspaces' dependencies"
    steps:
      - run: yarn install
  fetch_cocoapods_specs:
    steps:
      - run: curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
  restore_yarn_cache:
    steps:
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
  save_yarn_cache:
    steps:
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn  # set by YARN_CACHE_FOLDER
  restore_gradle_cache:
    steps:
      - restore_cache:
        key: jars-v0-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
  save_gradle_cache:
    steps:
      - save_cache:
        key: jars-v0-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
        paths:
          - /.gradle
  install_ndk:
    steps:
      - run:
        command: |
          ndk_version=android-ndk-r10e
          android_ndk_home=/opt/android/${ndk_version}
          curl --silent --show-error --location --fail --retry 3 --output /tmp/${ndk_version}.zip https://dl.google.com/android/repository/${ndk_version}-linux-x86_64.zip && \
          sudo unzip -q /tmp/${ndk_version}.zip -d /opt/android && \
          rm /tmp/${ndk_version}.zip && \
          sudo chown -R circleci:circleci ${android_ndk_home}
          echo "export ANDROID_NDK_HOME=${android_ndk_home}" >> "$BASH_ENV"

  jest:
    parameters:
      dir:
        type: string
      workers:
        type: string
        default: "1"
    steps:
      - run:
          working_directory: << parameters.dir >>
          command: yarn jest --maxWorkers << parameters.workers >>
  lint:
    parameters:
      dir:
        type: string
    steps:
      - run:
          working_directory: << parameters.dir >>
          command: yarn lint --max-warnings 0

executors:
  android:
    working_directory: ~/expo
    docker:
      # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/android/images
      - image: circleci/android:api-25-node8-alpha
    environment:
      YARN_CACHE_FOLDER: ~/.cache/yarn
  js:
    docker:
      # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/node/images
      - image: circleci/node:8
    resource_class: small
    working_directory: ~/expo
    environment:
      YARN_CACHE_FOLDER: ~/.cache/yarn
  mac:
    macos: # https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
      xcode: "10.0.0"
    working_directory: /Users/distiller/project
    environment:
      YARN_CACHE_FOLDER: ~/.cache/yarn

workflows:
  version: 2

  # JavaScript packages that make up the SDK
  sdk:
    jobs:
      - expo_sdk
      - babel_preset

  # Android and iOS clients
  client:
    jobs:
      - home
      - client_android
      - client_ios
  #     - shell_app_sim_base_ios
  #     - shell_app_ios_tests:
  #         requires:
  #           - shell_app_sim_base_ios
  #           - test_suite_publish
  #     - test_suite_publish
  #     - client_android_tests:
  #         requires:
  #           - test_suite_publish
  #     - shell_app_base_android_new

jobs:
  expo_sdk:
    executor: js
    steps:
      - checkout
      - set_up_environment
      - restore_yarn_cache
      - install_workspace_dependencies
      - save_yarn_cache
      # Add back linting once we get ESLint or TSLint set up
      - jest:
          dir: ~/expo/packages/expo

  babel_preset:
    executor: js
    steps:
      - checkout
      - set_up_environment
      - restore_yarn_cache
      - install_workspace_dependencies
      - save_yarn_cache
      - lint:
          dir: ~/expo/packages/babel-preset-expo
      - jest:
          dir: ~/expo/packages/babel-preset-expo

  home:
    executor: js
    steps:
      - checkout
      - set_up_environment
      - restore_yarn_cache
      - install_workspace_dependencies
      - save_yarn_cache
      - jest:
          dir: ~/expo/home

  client_ios:
    executor: mac
    steps:
      - checkout
      - set_up_environment
      - fetch_cocoapods_specs
      - run:
          working_directory: ~/project/tools-public
          command: yarn install
      - run:
          working_directory: ~/project/tools-public
          command: PATH=$(yarn bin):$PATH ./generate-files-ios.sh
      - run: fastlane ios create_simulator_build

  client_android:
    executor: android
    working_directory: ~/expo/android
    steps:
      - checkout
      - set_up_environment
      - run:
          working_directory: ~/project/tools-public
          command: yarn install
      - run:
          working_directory: ~/project/tools-public
          command: PATH=$(yarn bin):$PATH generate-dynamic-macros-android.sh
      - install_ndk
      - restore_gradle_cache
      - run: ./gradlew :app:preBuild
      - save_gradle_cache
      - run: ./gradlew :app:assembleProdMinSdkProdKernelRelease
      - run: zipalign -v -p 4 ./app/build/outputs/apk/prodMinSdkProdKernel/release/app-prodMinSdk-prodKernel-release-unsigned.apk app-prod-release-unsigned-aligned.apk
