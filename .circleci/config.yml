version: 2.1

commands:
  install_nix:
    steps:
      - run: curl https://nixos.org/releases/nix/nix-2.1.1/install | bash -s -- --daemon
      # enable nix in future steps
      - run: echo ". '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'" >> $BASH_ENV
  install_basics:
    steps:
      - run: NIX_PATH= nix-env -iA nixpkgs.git nixpkgs.openssh nixpkgs.gnutar nixpkgs.xz nixpkgs.gzip nixpkgs.find
  submodule_update:
    steps:
      - run: nix run nixpkgs.git -c git submodule update --init
  fetch_cocoapods_specs:
    steps:
      - run: nix run nixpkgs.curl -c curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
  restore_yarn_cache:
    steps:
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
  save_yarn_cache:
    steps:
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn  # set by YARN_CACHE_FOLDER
  restore_gradle_cache:
    steps:
      - restore_cache:
          key: jars-v0-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
  save_gradle_cache:
    steps:
      - save_cache:
          key: jars-v0-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
          paths:
            - /.gradle
  yarn:
    parameters:
      command:
        type: string
      working_directory:
        type: string
    steps:
      - run:
          working_directory: << parameters.working_directory >>
          command: nix run nixpkgs.yarn -c yarn << parameters.command >>
  with_yarn_bin:
    parameters:
      command:
        type: string
      working_directory:
        type: string
    steps:
      - run:
          working_directory: << parameters.working_directory >>
          command: PATH=$(nix run nixpkgs.yarn -c yarn bin):$PATH << parameters.command >>

executors:
  android:
    working_directory: ~/expo
    docker:
      # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/android/images
      - image: circleci/android:api-27-ndk-r17b
        user: circleci
    environment:
      YARN_CACHE_FOLDER: ~/.cache/yarn
      NIX_PATH: nixpkgs=https://github.com/NixOS/nixpkgs-channels/archive/f2b3bbe44e4f7e220ecb1308d1acdac5e6a0f8ba.tar.gz
  nix:
    docker:
      - image: lnl7/nix:2.1.2
    resource_class: small
    working_directory: ~/expo
    environment:
      YARN_CACHE_FOLDER: ~/.cache/yarn
      NIX_PATH: nixpkgs=https://github.com/NixOS/nixpkgs-channels/archive/f2b3bbe44e4f7e220ecb1308d1acdac5e6a0f8ba.tar.gz
  mac:
    macos: # https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
      xcode: "10.0.0"
    working_directory: /Users/distiller/project
    environment:
      YARN_CACHE_FOLDER: ~/.cache/yarn
      NIX_PATH: nixpkgs=https://github.com/NixOS/nixpkgs-channels/archive/f2b3bbe44e4f7e220ecb1308d1acdac5e6a0f8ba.tar.gz

workflows:
  version: 2

  # JavaScript packages that make up the SDK
  sdk:
    jobs:
      - expo_sdk
      - babel_preset

  # Android and iOS clients
  client:
    jobs:
      - home
      - client_android
      - client_ios
  #     - shell_app_sim_base_ios
  #     - shell_app_ios_tests:
  #         requires:
  #           - shell_app_sim_base_ios
  #           - test_suite_publish
  #     - test_suite_publish
  #     - client_android_tests:
  #         requires:
  #           - test_suite_publish
  #     - shell_app_base_android_new

jobs:
  expo_sdk:
    executor: nix
    steps:
      - install_basics
      - checkout
      - submodule_update
      - restore_yarn_cache
      - yarn:
          command: install
          working_directory: ~/expo
      - save_yarn_cache
      # Add back linting once we get ESLint or TSLint set up
      - yarn:
          command: jest --maxWorkers 1
          working_directory: ~/expo/packages/expo

  babel_preset:
    executor: nix
    steps:
      - install_basics
      - checkout
      - submodule_update
      - restore_yarn_cache
      - yarn:
          command: install
          working_directory: ~/expo
      - save_yarn_cache
      - yarn:
          command: lint --max-warnings 0
          working_directory: ~/expo/packages/babel-preset-expo
      - yarn:
          command: jest --maxWorkers 1
          working_directory: ~/expo/packages/babel-preset-expo

  home:
    executor: nix
    steps:
      - install_basics
      - checkout
      - submodule_update
      - restore_yarn_cache
      - yarn:
          command: install
          working_directory: ~/expo
      - save_yarn_cache
      - yarn:
          command: jest --maxWorkers 1
          working_directory: ~/expo/home

  client_ios:
    executor: mac
    steps:
      - install_nix
      - install_basics
      - checkout
      - fetch_cocoapods_specs
      - yarn:
          command: install
          working_directory: ~/project/tools-public
      - with_yarn_bin:
          working_directory: ~/project/tools-public
          command: ./generate-files-ios.sh
      - run: fastlane ios create_simulator_build

  client_android:
    executor: android
    steps:
      - install_nix
      - install_basics
      - checkout
      - yarn:
          command: install
          working_directory: ~/project/tools-public
      - with_yarn_bin:
          working_directory: ~/expo/tools-public
          command: ./generate-dynamic-macros-android.sh
      - restore_gradle_cache
      - run:
          working_directory: ~/expo/android
          command: ./gradlew :app:preBuild
      - save_gradle_cache
      - run:
          working_directory: ~/expo/android
          command: ./gradlew :app:assembleProdMinSdkProdKernelRelease
      - run:
          working_directory: ~/expo/android
          command: zipalign -v -p 4 ./app/build/outputs/apk/prodMinSdkProdKernel/release/app-prodMinSdk-prodKernel-release-unsigned.apk app-prod-release-unsigned-aligned.apk
